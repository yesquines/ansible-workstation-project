- name: DPKG - Add Architecture
  block:
    - name: DPKG - Check Architecture
      slurp:
        src: /var/lib/dpkg/arch
      register: check_architecture
    - name: DPKG - Check Architecture
      fail:
        msg: Needs add Architecture i386
      when: check_architecture.content | b64decode != "amd64\ni386\n"
  rescue:
    - name: DPKG - Add Architecture i386
      command: dpkg --add-architecture i386
  when: enable_i386

- name: Import Keys - URL
  apt_key:
    url: "{{ item }}"
    state: present
  loop: "{{ keys }}"
  when: add_repo_and_keys

- name: Import Keys - KEYSERVER
  apt_key:
    keyserver: "{{ item.keyserver }}"
    id: "{{ item.id }}"
    state: present
  loop: "{{ keys_server }}"
  when: add_repo_and_keys

- name: Ensure Repository 
  apt_repository:
    repo: "{{ item.repo }}"
    filename: "{{ item.name }}"
    update_cache: no
    state: present
  loop: "{{ repository }}"
  loop_control:
    label: "Repository: {{ item.name }}"
  when: add_repo_and_keys

- name: Install Dependencies
  package:
    name: "{{ dependencies }}"
    state: present 
  when: install_packages

- name: Install Packages
  apt:
    name: "{{ packages }}"
    update-cache: yes
    state: present
  when: install_packages
     
- name: Install Funny Packages :D
  apt:
    name: "{{ funny_packages }}"
    update-cache: yes
    state: present
  when: funny_packages is defined

- name: Install Deb Packages
  apt:
   deb: "{{ item }}"
  loop: "{{ deb_packages }}"
  when: deb_packages is defined

- name: Install NPM Package
  npm:
    name: "{{ item }}"
    global: yes
  loop: "{{ npm_packages }}"
  when: npm_packages is defined

- name: Install Compress Packages
  block:
    - name: Ensure Packages Directories
      file:
        path: "{{ item.path }}"
        mode: 0755
        state: directory
      loop: "{{ compress_packages }}"
      loop_control:
        label: "{{ item.path }}"
    - name: Install Compress Packages
      unarchive:
        src: "{{ item.url }}"
        dest: "{{ item.path }}"
        remote_src: yes
      loop: "{{ compress_packages }}"
      loop_control:
        label: "{{ item.url }}"
  when: compress_packages is defined

- name: Install Compress Binaries
  block:
    - name: Descompress Binaries
      unarchive: 
        src: "{{ item }}"
        dest: /tmp/
        exclude: ['kubectl','LICENSE','README.md','README.adoc'] #Need includes other files if necessary
        mode: 0755
        list_files: yes
        remote_src: yes
      loop: "{{ compress_binaries }}"
      register: decompress
      when: compress_binaries is defined
    - set_fact:
        decompress: '{{ {"results": []} }}'
      when: decompress.skipped is defined
    - name: Copy Binaries to "{{ binaries_path }}"
      copy:
        src: "/tmp/{{ item }}"
        dest: "{{ binaries_path }}"
        remote_src: yes
      loop: "{{ decompress | json_query('results[?*].files[0]') }}"

- name: Install Binaries Packages
  get_url:
    url: "{{ item.url }}"
    dest: "{{ binaries_path }}/{{ item.binarie }}"
    mode: 0755
  loop: "{{ binaries_packages }}"
  loop_control:
    label: "{{ item.binarie }}"
  when: binaries_packages is defined

